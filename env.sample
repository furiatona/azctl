# Azure Configuration
REGISTRY=myapp
AZURE_RESOURCE_GROUP=rg-myapp-staging
ACR_RESOURCE_GROUP=myapp-resources
LOCATION=eastus

# Container Configuration
IMAGE_NAME=myapp-service
IMAGE_TAG=latest
CONTAINER_GROUP_NAME=myapp-service
DNS_NAME_LABEL=myapp-service-staging

# ACI Configuration
OS_TYPE=Linux
ACI_PORT=8080
ACI_CPU=1
ACI_MEMORY=2

# Registry Credentials
ACR_USERNAME=myapp
ACR_PASSWORD=your-acr-password

# Application Environment Variables
FIREBASE_KEY=your-FIREBASE-key
FIREBASE_URL=https://your-project.FIREBASE.co/
SAGEMAKER_OPENAI_MODEL=text-embedding-3-small
SAGEMAKER_OPENAI_API_KEY=your-openai-key
OPENAI_SAGEMAKER_EMBEDDINGS_ENDPOINT=https://example.com

# Logging Configuration (optional)
LOG_SHARE_NAME=logshare-staging
LOG_STORAGE_ACCOUNT=myapplogs
LOG_STORAGE_KEY=your-storage-key
FLUENTBIT_CONFIG_SHARE=fluentbit-config-staging

# WebApp Configuration (optional)
WEBAPP_NAME=myapp-service-webapp
APP_SERVICE_PLAN=ASP-myappresources-bffc

# Azure App Configuration (optional)
APP_CONFIG_NAME=myapp-app-conf
APP_CONFIG_LABEL=staging
APP_CONFIG_SKIP=false
APP_CONFIG_DEBUG=false

# =============================================================================
# CI-FRIENDLY VARIABLES (Non-prefixed for CI environments)
# =============================================================================
# These variables are used in CI environments (GitHub Actions, Azure Pipelines, etc.)
# The azctl tool will automatically map environment-specific prefixed variables
# to these non-prefixed versions when running in CI mode.
#
# Example CI workflow variables:
# env:
#   RESOURCE_GROUP: rg-myapp-staging
#   APP_CONFIG: myapp-app-conf
#   WEBAPP_NAME: myapp-service-webapp
#   ACI_SUPABASE_KEY: your-supabase-key
#   ACI_FIREBASE_KEY: your-firebase-key
#
# The tool will automatically:
# 1. Detect the CI environment (GitHub Actions, Azure Pipeline, etc.)
# 2. Auto-detect the environment (dev/staging/prod) from branch name
# 3. Map prefixed variables (STAGING_RESOURCE_GROUP) to non-prefixed (RESOURCE_GROUP)
# 4. Use the appropriate configuration for the detected environment
#
# For local development, you can still use prefixed variables:
# DEV_RESOURCE_GROUP=rg-myapp-dev
# STAGING_RESOURCE_GROUP=rg-myapp-staging
# PROD_RESOURCE_GROUP=rg-myapp-prod
#
# The tool will use the appropriate prefixed variables based on the --env flag.
# =============================================================================
